#!/usr/bin/env node

/**
 * En este archivo se encuentra la lógica del servidor HTTP, su manejo de errores, así como la configuración de puerto para la aplicación de Express
 */

// Dependencias del módulo
var app = require('../app.js');
var debug = require('debug')('elgranbuda:server');
var http = require('http');

// Definiendo el puerto donde correrá el servidor de Express
var port = normalizePort(process.env.PORT || '3000');
app.set('port', port);

// Creando el servidor HTTP
var server = http.createServer(app);

// Escuchando en el puerto establecido
server.listen(port, () => {
  console.log(`Server live at http://localhost:${port}/ `);
});
server.on('error', onError);
server.on('listening', onListening);

// Normalizando el puerto en un número, cadena o falso
function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    return val;
  }

  if (port >= 0) {
    return port;
  }

  return false;
}

// Manejo de errores del servidor HTTP
function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

// Escucha de eventos para el servidor HTTP.
function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}
